import { useState } from 'react';
import { motion } from 'framer-motion';

const mockAIGenerateComponent = async (requirement) => {
  // Simulate an AI call. Replace with real API integration.
  return new Promise((resolve) => {
    setTimeout(() => {
      if (requirement.toLowerCase().includes('button')) {
        resolve({
          code: `<button className=\"bg-indigo-600 text-white px-4 py-2 rounded\">AI Button</button>`,
          preview: (
            <button className="bg-indigo-600 text-white px-4 py-2 rounded">AI Button</button>
          ),
        });
      } else if (requirement.toLowerCase().includes('card')) {
        resolve({
          code: `<div className=\"bg-white shadow rounded p-4\">\n  <h3 className=\"text-lg font-bold\">AI Card</h3>\n  <p>Generated by AI</p>\n</div>`,
          preview: (
            <div className="bg-white shadow rounded p-4">
              <h3 className="text-lg font-bold">AI Card</h3>
              <p>Generated by AI</p>
            </div>
          ),
        });
      } else {
        resolve({
          code: `<div className=\"p-4 border rounded\">Custom AI Component</div>`,
          preview: <div className="p-4 border rounded">Custom AI Component</div>,
        });
      }
    }, 1200);
  });
};

const AITheme = () => {
  const [requirement, setRequirement] = useState('');
  const [result, setResult] = useState(null);
  const [loading, setLoading] = useState(false);

  const handleGenerate = async (e) => {
    e.preventDefault();
    setLoading(true);
    setResult(null);
    const aiResult = await mockAIGenerateComponent(requirement);
    setResult(aiResult);
    setLoading(false);
  };

  return (
    <div className="max-w-xl mx-auto py-12 px-4">
      <motion.h2
        className="text-3xl font-bold mb-6 text-center"
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
      >
        AI Theme Generator
      </motion.h2>
      <form onSubmit={handleGenerate} className="flex flex-col gap-4 mb-8">
        <textarea
          className="border rounded p-3 min-h-[80px] focus:outline-indigo-500"
          placeholder="Describe the UI component you want (e.g., 'modern button', 'profile card')"
          value={requirement}
          onChange={(e) => setRequirement(e.target.value)}
          required
        />
        <button
          type="submit"
          className="bg-indigo-600 text-white px-6 py-2 rounded hover:bg-indigo-700 transition"
          disabled={loading}
        >
          {loading ? 'Generating...' : 'Generate UI Component'}
        </button>
      </form>
      {result && (
        <motion.div
          className="bg-gray-50 p-6 rounded shadow text-center"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
        >
          <div className="mb-4">{result.preview}</div>
          <pre className="bg-gray-200 rounded p-2 text-left overflow-x-auto text-sm">
            {result.code}
          </pre>
        </motion.div>
      )}
    </div>
  );
};

export default AITheme; 